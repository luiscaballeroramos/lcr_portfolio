Estructura del repositorio: C:\Users\lca-dossa-cadiz\OneDrive\Python\portfolio

portfolio/
    .gitignore
    estructura_y_contenido.txt
    main.py

--- Contenido de: main.py ---
import streamlit as st
import requests

# Leer token desde secrets
token = st.secrets["github"]["token"]
# Opcional: hacer una llamada a la API de GitHub para demostrar autenticación
headers = {"Authorization": f"token {token}"}
response = requests.get("https://api.github.com/user", headers=headers)
if response.status_code == 200:
    user_data = response.json()
    st.success(f"Authenticated as: {user_data['login']}")
else:
    st.error(f"GitHub API error: {response.status_code}")





st.set_page_config(page_title="main", layout="centered")
st.title("PortfolioLuis Caballero Ramos")
st.write("select an app to run")
col1, col2 = st.columns(2)
with col1:
    st.page_link("pages/app_multiply.py", label="Multiply")
with col2:
    st.page_link("pages/app_2.py", label="None")





# Mostrar token parcialmente (solo los primeros 4 caracteres como demo)
st.write(f"Token starts with: {token[:4]}...")

--- Fin de: main.py ---

    pyproject.toml

--- Contenido de: pyproject.toml ---
[project]
name = "portfolio"
version = "0.1.0"
description = "Portfolio of tools developed by Luis Caballero Ramos"    
authors = [{ name = "Luis Caballero Ramos", email = "luiscaballeroramos@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9,!=3.9.7"

dependencies = [
    "streamlit==1.45.1",
    "lcr_code @ git+https://github.com/luiscaballeroramos/lcr_code.git"
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

--- Fin de: pyproject.toml ---

    README.md
pages/
    app_2.py

--- Contenido de: pages\app_2.py ---

--- Fin de: pages\app_2.py ---

    app_multiply.py

--- Contenido de: pages\app_multiply.py ---
import streamlit as st
from lcr_code.operaciones import duplicar

# Slider de 0 a 100
valor = st.slider("Selecciona un valor", min_value=0, max_value=100, value=50)

# Llamar a la función del otro archivo
resultado = duplicar(valor)

# Mostrar el resultado en un cuadro de texto
st.text_input("Resultado (valor * 10)", value=str(resultado), disabled=True)

--- Fin de: pages\app_multiply.py ---

portfolio/
    __init__.py

--- Contenido de: portfolio\__init__.py ---

--- Fin de: portfolio\__init__.py ---

portfolio.egg-info/
    dependency_links.txt
    PKG-INFO
    requires.txt
    SOURCES.txt
    top_level.txt
